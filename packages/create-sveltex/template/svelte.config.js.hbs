import adapter from '@sveltejs/adapter-{{adapter}}';
import { sveltePreprocess } from 'svelte-preprocess';
import sveltexPreprocessor from './sveltex.config.js';

/** @type {import('@sveltejs/kit').Config} */
const config = {
    extensions: ['.svelte', ...sveltexPreprocessor.configuration.extensions],
    preprocess: [
        {{#if (contains tools 'tailwindcss')}}
        sveltePreprocess({
            postcss: { configFilePath: './postcss.config.js' },
        }),
        {{else}}
        sveltePreprocess(),
        {{/if}}
        sveltexPreprocessor
    ],
    {{#if (equals codeBackend 'shiki')}}
    // Svelte complains if a noninteractive element has a nonnegative tabindex
    // (see https://github.com/sveltejs/svelte/issues/7953). However, Shiki
    // adds `tabindex="0"` to all `pre` elements
    // (see https://github.com/shikijs/shiki/pull/429), since scrollable `pre`
    // elements should have one (the fact that they also add it to
    // non-scrollable `pre` elements seems to be a compromise, see
    // https://github.com/shikijs/shiki/issues/428). Accordingly, using Shiki
    // with Svelte will throw a lot of warnings that may not be particularly
    // helpful. This is a workaround to suppress those warnings. Note that this
    // will also suppress 'a11y-no-noninteractive-tabindex' warnings from any
    // other source, so use with caution.
    onwarn: (warning, defaultHandler) => {
        if (warning.code === 'a11y-no-noninteractive-tabindex') return;
        defaultHandler(warning);
    },
    {{/if}}
	kit: {
        {{#if (equals adapter 'auto')}}
        // adapter-auto only supports some environments, see
        // https://kit.svelte.dev/docs/adapter-auto for a list.
        //
		// If your environment is not supported, or you settled on a specific
        // environment, switch out the adapter.
        //
		// See https://kit.svelte.dev/docs/adapters for more information about
        // adapters.
        {{/if}}
		adapter: adapter(),
	},
};

export default config;

$schema: https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
name: SvelTeX
scopeName: source.sveltex
fileTypes:
  - sveltex
uuid: 7c89efc7-b9ba-41fb-ac65-2aea8b54de22
patterns:
  - include: '#base'
injections:
  ? 'R:source.sveltex - (source.svelte, source.ts, meta.embedded, meta.math,
    text.tex.latex, comment, markup.inline.raw, markup.fenced_code)'
  : patterns:
      - include: text.html.markdown#inline
      - include: '#injectionPatterns'
repository:
  base:
    patterns:
      - include: '#frontmatter'
      - include: '#main'
  main:
    patterns:
      - include: '#verbatim'
      - include: '#math'
      - include: '#script-style'
      # - include: source.svelte#comments
      # - include: source.svelte#special-tags
      # - include: source.svelte#tags
      # - include: source.svelte#interpolation
  frontmatter:
    patterns:
      - include: '#frontmatter-yaml'
      - include: '#frontmatter-toml'
      - include: '#frontmatter-json'
    repository:
      frontmatter-yaml:
        begin: \A(---)(yaml)?\s*$
        end: ^(---)\s*$
        contentName: meta.embedded.block.frontmatter.yaml
        patterns:
          - include: source.yaml
        beginCaptures:
          '1':
            name: punctuation.definition.markdown comment
          '2':
            name: comment
        endCaptures:
          '1':
            name: punctuation.definition.markdown comment
      frontmatter-toml:
        patterns:
          - begin: \A(---)(toml)\s*$
            end: ^(---)\s*$
            contentName: meta.embedded.block.frontmatter.toml
            patterns:
              - include: source.toml
            beginCaptures:
              '1':
                name: punctuation.definition.markdown comment
              '2':
                name: comment
            endCaptures:
              '1':
                name: punctuation.definition.markdown comment
          - begin: \A(\+\+\+)\s*$
            end: ^(\+\+\+)\s*$
            contentName: meta.embedded.block.frontmatter.toml
            patterns:
              - include: source.toml
            captures:
              '1':
                name: punctuation.definition.markdown comment
      frontmatter-json:
        begin: \A(---)(json)\s*$
        end: ^(---)\s*$
        contentName: meta.embedded.block.frontmatter.json
        patterns:
          - include: source.json
        beginCaptures:
          '1':
            name: punctuation.definition.markdown comment
          '2':
            name: comment
        endCaptures:
          '1':
            name: punctuation.definition.markdown comment
  verbatim:
    patterns:
      - name: meta.embedded.block.latex
        match: |
          (?x)                  # extended mode
          (?i)                  # case-insensitive
          ^                     # (start of line)
          (.*)                  # 1: text before
          (                     # 2: opening tag
            <                   # (opening bracket)
              (tex|latex|tikz)  # 3: tag name
              (?:\s[^>]*?)?     # -: attributes, optional
            >                   # (closing bracket)
          )
          (.*)                  # 4: inner content
          (                     # 5: closing tag
            </                  # (opening bracket)
              \3                # (backreference to tag name)
            >                   # (closing bracket)
          )
          (.*)                  # 6: text after
          $                     # (end of line)
        captures:
          '1':
            patterns:
              - include: '#main'
              - include: '#injectionPatterns'
          '2':
            patterns:
              - include: source.svelte
          '4':
            patterns:
              - include: text.tex.latex
          '5':
            patterns:
              - include: source.svelte
          '6':
            patterns:
              - include: '#main'
              - include: '#injectionPatterns'
      - name: meta.embedded.block.latex
        begin: (?i)(<(tex|latex|tikz)(\s[^>]*?)?>)
        end: '(?i)(</(tex|latex|tikz)>)$'
        patterns:
          - begin: ^
            while: ^(?!</(tex|latex|tikz)>)
            patterns:
              - include: text.tex.latex
        beginCaptures:
          '1':
            patterns:
              - include: source.svelte
        endCaptures:
          '1':
            patterns:
              - include: source.svelte
      - name: meta.embedded.block.plain
        begin: (?i)(<(verb|verbatim)(\s[^>]*?)?>)
        end: (?i)(</(verb|verbatim)>)$
        patterns:
          - begin: ^
            while: (?i)^(?!</(verb|verbatim)>)
            patterns:
              - include: source.ignore
        beginCaptures:
          '1':
            patterns:
              - include: source.svelte
        endCaptures:
          '1':
            name: meta.tag
            patterns:
              - include: source.svelte
  math:
    patterns:
      - begin: "(\\$+)"
        beginCaptures:
          '1':
            name: punctuation.definition.string.begin.tex
        end: "\\1"
        endCaptures:
          '0':
            name: punctuation.definition.string.end.tex
        name: meta.math.block.tex support.class.math.block.tex
        patterns:
          - include: text.tex#math
          - include: $self
          - include: text.tex.latex
      - begin: "\\\\\\["
        beginCaptures:
          '0':
            name: punctuation.definition.string.begin.tex
        end: "\\\\\\]"
        endCaptures:
          '0':
            name: punctuation.definition.string.end.tex
        name: meta.math.block.tex support.class.math.block.tex
        patterns:
          - include: text.tex#math
          - include: $self
          - include: text.tex.latex
      - begin: "\\\\\\("
        beginCaptures:
          '0':
            name: punctuation.definition.string.begin.tex
        end: "\\\\\\)"
        endCaptures:
          '0':
            name: punctuation.definition.string.end.tex
        name: meta.math.block.tex support.class.math.block.tex
        patterns:
          - include: text.tex#math
          - include: $self
          - include: text.tex.latex
  script-style:
    begin: (?i)(^|\G)\s*(?=<(script|style)(\s|$|>)(?!.*?</(script|style)>))
    end: (?i)(.*)((</)(script|style)(>))
    endCaptures:
      '1':
        patterns:
          - include: text.html.derivative
      '2':
        name: meta.tag.structure.$4.end.html
      '3':
        name: punctuation.definition.tag.begin.html
      '4':
        name: entity.name.tag.html
      '5':
        name: punctuation.definition.tag.end.html
    patterns:
      - begin: (\s*|$)
        patterns:
          - include: text.html.derivative
        while: (?i)^(?!.*</(script|style)>)
  injectionPatterns:
    patterns:
      # - include: '#verbatim'
      - include: source.svelte#comments
      - include: source.svelte#special-tags
      - include: source.svelte#tags
      - include: source.svelte#interpolation
      - include: '#math'
      - include: text.html.markdown#separator
      - include: text.html.markdown#heading
      - include: '#blockquote'
      - include: '#lists'
      - include: text.html.markdown#fenced_code_block
      - include: text.html.markdown#link-def
      # - include: text.html.markdown#html
      - include: source.svelte#tags
      - include: text.html.markdown#table
  blockquote:
    begin: "(^|\\G)[ ]{0,3}(>) ?"
    captures:
      '2':
        name: punctuation.definition.quote.begin.markdown
    name: markup.quote.markdown
    patterns:
      - include: 'text.html.markdown#block'
    while: "(^|\\G)\\s*(>) ?"
  lists:
    patterns:
      - begin: "(^|\\G)([ ]{0,3})([*+-])([ \\t])"
        beginCaptures:
          '3':
            name: punctuation.definition.list.begin.markdown
        comment: Currently does not support un-indented second lines.
        name: markup.list.unnumbered.markdown
        patterns:
          - include: 'text.html.markdown#block'
          # - include: '#list_paragraph'
        while: "((^|\\G)([ ]{2,4}|\\t))|(^[ \\t]*$)"
      - begin: "(^|\\G)([ ]{0,3})([0-9]+[\\.\\)])([ \\t])"
        beginCaptures:
          '3':
            name: punctuation.definition.list.begin.markdown
        name: markup.list.numbered.markdown
        # patterns:
        # - include: 'text.html.markdown#block'
        # - include: '#list_paragraph'
        while: "((^|\\G)([ ]{2,4}|\\t))|(^[ \\t]*$)"
  # This is the #list_paragraph pattern from VS Code's markdown.tmLanguage.json,
  # but without inclusion of the `text.html.derivative` pattern.
  list_paragraph:
    begin: "(^|\\G)(?=\\S)(?![*+->]\\s|[0-9]+\\.\\s)"
    name: meta.paragraph.markdown
    # patterns:
    # - include: '#inline'
    # - include: text.html.derivative
    # - include: '#heading-setext'
    while:
      "(^|\\G)(?!\\s*$|#|[ ]{0,3}([-*_>][ ]{2,}){3,}[ \\t]*$\\n?|[
      ]{0,3}[*+->]|[ ]{0,3}[0-9]+\\.)"

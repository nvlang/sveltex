import { generateTests } from '$tests';
import { writeFileSync } from 'fs';

const markdown = true;
const code = true;

const tests = await generateTests({ markdown, code }, [
    '*foo bar*',
    'a * foo bar*',
    'a*"foo"*',
    '* a *',
    'foo*bar*',
    '5*6*78',
    '_foo bar_',
    '_ foo bar_',
    'a_"foo"_',
    'foo_bar_',
    '5_6_78',
    'пристаням_стремятся_',
    'aa_"bb"_cc',
    'foo-_(bar)_',
    '_foo*',
    '*foo bar *',
    '*foo bar\n*',
    '*(*foo)',
    '*(*foo*)*',
    '_(_foo)',
    '_(_foo_)_',
    '_foo_bar',
    '_пристаням_стремятся',
    '_foo_bar_baz_',
    '_(bar)_.',
    '**foo bar**',
    '** foo bar**',
    'a**"foo"**',
    'foo**bar**',
    '__foo bar__',
    '__ foo bar__',
    '__\nfoo bar__',
    'a__"foo"__',
    'foo__bar__',
    '5__6__78',
    'пристаням__стремятся__',
    '__foo, __bar__, baz__',
    'foo-__(bar)__',
    '**foo bar **',
    '**(**foo)',
    '*(**foo**)*',
    '**foo "*bar*" foo**',
    '**foo**bar',
    '__foo bar __',
    '__(__foo)',
    '_(__foo__)_',
    '__foo__bar',
    '__пристаням__стремятся',
    '__foo__bar__baz__',
    '__(bar)__.',
    '*foo [bar](/url)*',
    '*foo\nbar*',
    '_foo __bar__ baz_',
    '_foo _bar_ baz_',
    '__foo_ bar_',
    '*foo *bar**',
    '*foo **bar** baz*',
    '*foo**bar**baz*',
    '*foo**bar*',
    '***foo** bar*',
    '*foo **bar***',
    '*foo**bar***',
    'foo***bar***baz',
    'foo******bar*********baz',
    '*foo **bar *baz* bim** bop*',
    '*foo [*bar*](/url)*',
    '** is not an empty emphasis',
    '**** is not an empty emphasis',
    '**foo [bar](/url)**',
    '**foo\nbar**',
    '__foo _bar_ baz__',
    '__foo __bar__ baz__',
    '____foo__ bar__',
    '**foo **bar****',
    '**foo *bar* baz**',
    '**foo*bar*baz**',
    '***foo* bar**',
    '**foo *bar***',
    '**foo *bar **baz**\nbim* bop**',
    '**foo [*bar*](/url)**',
    '__ is not an empty emphasis',
    '____ is not an empty emphasis',
    'foo ***',
    'foo *\\**',
    'foo *_*',
    'foo *****',
    'foo **\\***',
    'foo **_**',
    '**foo*',
    '*foo**',
    '***foo**',
    '****foo*',
    '**foo***',
    '*foo****',
    'foo ___',
    'foo _\\__',
    'foo _X_',
    'foo _____',
    'foo __\\___',
    'foo __X__',
    '__foo_',
    '_foo__',
    '___foo__',
    '____foo_',
    '__foo___',
    '_foo____',
    '**foo**',
    '*_foo_*',
    '__foo__',
    '_*foo*_',
    '****foo****',
    '____foo____',
    '******foo******',
    '***foo***',
    '___foo___',
    '*foo _bar* baz_',
    '*foo __bar *baz bim__ bam*',
    '**foo **bar baz**',
    '*foo *bar baz*',
    '*[bar*](/url)',
    '_[bar_](/url)',
    '*<img src="foo" title="*"/>',
    '*<img src="foo" title="*"/>',
    '**<a href="**">',
    '__<a href="__">',
    '*a `*`*',
    '_a `_`_',
    '*$*a.',
    '*£*a.',
    '*€*a.',
    '**a<http://foo.bar/?q=**>',
    '__a<http://foo.bar/?q=__>',
    '*a*',
    /// character-escape.js
    // '\\*not emphasized*\n\\<br/> not a tag\n\\[not a link](/foo)\n\\`not code`\n1\\. not a list\n\\* not a list\n\\# not a heading\n\\[foo]: /url "not a reference"\n\\&ouml; not a character entity\n',
    // [
    //     '<p>*not emphasized*',
    //     '&lt;br/&gt; not a tag',
    //     '[not a link](/foo)',
    //     '`not code`',
    //     '1. not a list',
    //     '* not a list',
    //     '# not a heading',
    //     '[foo]: /url &quot;not a reference&quot;',
    //     '&amp;ouml; not a character entity</p>',
    // ].join('\n'),
    'foo\\\nbar',
    '`` \\[\\` ``',
    '    \\[\\]',
    '<http://example.com?find=\\*>',
    '<a href="/bar\\/)">',
    '[foo](/bar\\* "ti\\*tle")',
    '[foo]: /bar\\* "ti\\*tle"\n\n[foo]',
    '``` foo\\+bar\nfoo\n```',
    '\\> a',
    // character-reference.js
    [
        '&nbsp; &amp; &copy; &AElig; &Dcaron;',
        '&frac34; &HilbertSpace; &DifferentialD;',
        '&ClockwiseContourIntegral; &ngE;',
    ].join('\n'),
    '<p>  &amp; © Æ Ď\n¾ ℋ ⅆ\n∲ ≧̸</p>',
    'should support named character references',
    '&#35; &#1234; &#992; &#0;',
    '&#X22; &#XD06; &#xcab;',
    '片&#xE0103;',
    [
        '&nbsp &x; &#; &#x;',
        '&#987654321;',
        '&#abcdef0;',
        '&ThisIsNotDefined; &hi?;',
    ].join('\n'),
    '&copy',
    '&MadeUpEntity;',
    '<a href="&ouml;&ouml;.html">',
    '[foo](/f&ouml;&ouml; "f&ouml;&ouml;")',
    '[foo]: /f&ouml;&ouml; "f&ouml;&ouml;"\n\n[foo]',
    '``` f&ouml;&ouml;\nfoo\n```',
    '`f&ouml;&ouml;`',
    '    f&ouml;f&ouml;',
    '&#42;foo&#42;\n*foo*',
    '&#42; foo\n\n* foo',
    '[a](url &quot;tit&quot;)',
    'foo&#10;&#10;bar',
    '&#9;foo',
    '&CounterClockwiseContourIntegral;',
    '&#xff9999;',
    '&#9999999;',
    '&CounterClockwiseContourIntegrali;',
    '&#xff99999;',
    '&#99999999;',
    '&-;',
    '&#-;',
    '&#x-;',
    '&lt-;',
    '&#9-;',
    '&#x9-;',
    // code.js
    '`foo`',
    '`` foo ` bar ``',
    '` `` `',
    '`  ``  `',
    '`` ` ``',
    '` a`',
    '` b `',
    '` `\n`  `',
    '``\nfoo\nbar  \nbaz\n``',
    '``\nfoo \n``',
    '`foo   bar \nbaz`',
    '`foo\\`bar`',
    '``foo`bar``',
    '` foo `` bar `',
    '*foo`*`',
    '[not a `link](/foo`)',
    '`<a href="`">`',
    '<a href="`">`',
    '`<http://foo.bar.`baz>`',
    '<http://foo.bar.`baz>`',
    '```foo``',
    '`foo',
    '`foo``bar``',
    '`foo\t\tbar`',
    '\\``x`',
    '`a`',
    // hard-break.js
    'foo  \nbaz',
    'foo\\\nbaz',
    'foo       \nbaz',
    'foo  \n     bar',
    'foo\\\n     bar',
    '*foo  \nbar*',
    '*foo\\\nbar*',
    '`code  \ntext`',
    '``code\\\ntext``',
    'foo  ',
    'foo\\',
    '### foo\\',
    '### foo  ',
    'aaa  \t\nbb',
    'aaa\t  \nbb',
    'aaa  \t  \nbb',
    'aaa\0  \nbb',
    'aaa\0\t\nbb',
    '*a*  \nbb',
    '*a*\t\nbb',
    '*a*  \t\nbb',
    '*a*\t  \nbb',
    '*a*  \t  \nbb',
    'a\\\nb',
    // HTML
    '<a><bab><c2c>',
    '<a/><b2/>',
    '<a  /><b2\ndata="foo" >',
    '<a foo="bar" bam = \'baz <em>"</em>\'\n_boolean zoop:33=zoop:33 />',
    'Foo <responsive-image src="foo.jpg" />',
    '<33> <__>',
    '<a h*#ref="hi">',
    "<a href=\"hi'> <a href=hi'>",
    '< a><\nfoo><bar/ >\n<foo bar=baz\nbim!bop />',
    "<a href='bar'title=title>",
    '</a></foo >',
    '</a href="foo">',
    'foo <!-- this is a\ncomment - with hyphen -->',
    'foo <!-- not a comment -- two hyphens -->',
    'foo <!--> foo -->',
    'foo <!-- foo--->',
    'foo <?php echo $a; ?>',
    'foo <!ELEMENT br EMPTY>',
    'foo <![CDATA[>&<]]>',
    'foo <a href="&ouml;">',
    'foo <a href="\\*">',
    '<a href="\\"">',
    'foo <!1>',
    'foo <!-not enough!-->',
    'foo <!---ok-->',
    'foo <!--->',
    'foo <!-- -> -->',
    'foo <!--',
    'foo <!--a',
    'foo <!--a-',
    'foo <!--a--',
    'foo <![cdata[]]>', // See: <https://github.com/commonmark/commonmark.js/issues/193>
    'foo <![CDATA',
    'foo <![CDATA[',
    'foo <![CDATA[]',
    'foo <![CDATA[]]',
    'foo <![CDATA[asd',
    'foo <![CDATA[]]]]>',
    'foo <!doctype',
    'foo <?php',
    'foo <?php?',
    'foo <???>',
    'foo </3>',
    'foo </a->',
    'foo </a   >',
    'foo </a!>',
    'foo <a->',
    'foo <a   >',
    'foo <a!>',
    'foo <a !>',
    'foo <a b!>',
    'foo <a b/>',
    'foo <a b>',
    'foo <a b=<>',
    'foo <a b=>>',
    'foo <a b==>',
    'foo <a b=`>',
    'foo <a b="asd',
    "foo <a b='asd",
    'foo <a b=asd',
    'foo <a b=\nasd>',
    '<x> a',
    '<span foo=',
    'a <!b\nc>',
    'a <![CDATA[\n]]>',
    'a <?\n?>', // See: <https://github.com/commonmark/commonmark.js/issues/196>
    'a <x>',
    // link-resource.js
    '[link](/uri "title")',
    '[link](/uri)',
    '[link]()',
    '[link](<>)',
    '[link](/my uri)',
    '[link](</my uri>)',
    '[link](foo\nbar)',
    '[link](<foo\nbar>)',
    '[a](<b)c>)',
    '[link](<foo\\>)',
    '[a](<b)c\n[a](<b)c>\n[a](<b>c)',
    '[link](\\(foo\\))',
    '[link](foo(and(bar)))',
    '[link](foo\\(and\\(bar\\))',
    '[link](<foo(and(bar)>)',
    '[link](foo\\)\\:)',
    '[link](#fragment)',
    '[link](http://example.com#fragment)',
    '[link](http://example.com?foo=3#frag)',
    '[link](foo\\bar)',
    '[link](foo%20b&auml;)',
    '[link]("title")',
    '[link](/url "title")',
    "[link](/url 'title')",
    '[link](/url (title))',
    '[link](/url "title \\"&quot;")',
    '[link](/url "title")',
    '[link](/url "title "and" title")',
    '[link](/url \'title "and" title\')',
    '[link](   /uri\n  "title"  )',
    '[link](\t\n/uri "title")',
    '[link](/uri  "title"\t\n)',
    '[link] (/uri)',
    '[link [foo [bar]]](/uri)',
    '[link] bar](/uri)',
    '[link [bar](/uri)',
    '[link \\[bar](/uri)',
    '[link *foo **bar** `#`*](/uri)',
    '[![moon](moon.jpg)](/uri)',
    '[foo [bar](/uri)](/uri)',
    '[foo *[bar [baz](/uri)](/uri)*](/uri)',
    '![[[foo](uri1)](uri2)](uri3)',
    '*[foo*](/uri)',
    '[foo *bar](baz*)',
    '*foo [bar* baz]',
    '[foo <bar attr="](baz)">',
    '[foo`](/uri)`',
    '[foo<http://example.com/?search=](uri)>',
    '[foo<http://example.com/?search=](uri)>',
    '[]()',
    '[](<> "")', // See: <https://github.com/commonmark/commonmark.js/issues/192>
    '[a](<b>"c")',
    '[](<',
    '[](',
    '[](\\<)',
    '[](<\\<>)',
    '[](\\',
    '[](<\\',
    '[](a "',
    "[](a '",
    '[](a (',
    '[](a "\\',
    "[](a '\\",
    '[](a (\\',
    '[](a "\\"")',
    "[](a '\\'')",
    '[](a (\\)))',
    '[&amp;&copy;&](example.com/&amp;&copy;& "&amp;&copy;&")',
    '[a](1())',
    '[a](1(2()))',
    '[a](1(2(3(4(5(6(7(8(9(10(11(12(13(14(15(16(17(18(19(20(21(22(23(24(25(26(27(28(29(30(31(32()))))))))))))))))))))))))))))))))',
    '[a](1(2(3(4(5(6(7(8(9(10(11(12(13(14(15(16(17(18(19(20(21(22(23(24(25(26(27(28(29(30(31(32(33())))))))))))))))))))))))))))))))))',
    '[a](b "\n c")',
    '[a](b( "c")',
    '[a](\0)',
]);

writeFileSync('tests/processor/sveltex.autogen.json', JSON.stringify(tests));
